🧠 Introduction to Data Representation in Computing

💡 What is Data Representation?
In computing, data representation refers to the way data is stored, processed, and transferred using binary (0s and 1s), because computers only understand electrical signals that translate into ON (1) or OFF (0) states.

🧱 Why Binary?
Computers use transistors, which are tiny switches that are either ON or OFF.
Binary makes it easy to represent:
ON = 1
OFF = 0

🧮 Types of Data Representation
Type
Representation Format
Numbers
Binary (base-2), Octal (base-8), Decimal (base-10), Hex (base-16)
Text
ASCII, Unicode (UTF-8, UTF-16)
Images
Bitmaps, JPEG, PNG, SVG (stored as 0s and 1s)
Audio
Sampled sound waves stored as numbers
Video
Combination of images + audio streams


🔢 Number Systems in Computing
System
Base
Uses
Binary
2
Machine-level data
Octal
8
Used in older systems
Decimal
10
Human-readable numbers
Hexadecimal
16
Compact representation for binary (used in colors, memory addresses)


✍️ Text Representation
ASCII (American Standard Code for Information Interchange):
Represents characters as 7-bit binary numbers.
Example: 'A' = 65 → 01000001
Unicode (UTF-8, UTF-16):
Supports characters from all languages and symbols.
More flexible and widely used today.

🧊 Everything is Bits
No matter if it’s text, images, music, or video — all data inside a computer is ultimately stored and manipulated as binary digits (bits).


 Decimal Number System

🧠 What is it?
The Decimal Number System is the standard system we use in everyday life.
It’s called decimal because it’s based on 10 digits:
0, 1, 2, 3, 4, 5, 6, 7, 8, 9

🔢 Why Base 10?
Since there are 10 digits, the system uses powers of 10 to represent values based on their position (place value).

🧮 Place Values
Take the number 5642 as an example:
Digit
Place
Value Calculation
Final Value
5
Thousands
5 × 1000
5000
6
Hundreds
6 × 100
600
4
Tens
4 × 10
40
2
Units
2 × 1
2


Total
5642

So:
5642 = (5 × 10³) + (6 × 10²) + (4 × 10¹) + (2 × 10⁰)